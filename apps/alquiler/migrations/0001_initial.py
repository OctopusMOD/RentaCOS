# Generated by Django 5.2.1 on 2025-06-12 02:09

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Contrato',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_contrato', models.CharField(max_length=20, unique=True, verbose_name='Número de Contrato')),
                ('fecha_firma', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Firma')),
                ('estado', models.CharField(choices=[('BORRADOR', 'Borrador'), ('FIRMADO', 'Firmado'), ('ACTIVO', 'Activo'), ('FINALIZADO', 'Finalizado'), ('CANCELADO', 'Cancelado')], default='BORRADOR', max_length=20, verbose_name='Estado')),
                ('terminos_condiciones', models.TextField(verbose_name='Términos y Condiciones')),
                ('documento_pdf', models.FileField(blank=True, null=True, upload_to='contratos/', verbose_name='Documento PDF')),
            ],
            options={
                'verbose_name': 'Contrato',
                'verbose_name_plural': 'Contratos',
                'ordering': ['-fecha_firma'],
            },
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_cliente', models.CharField(choices=[('EMPRESA', 'Empresa'), ('PERSONA', 'Persona Natural')], default='EMPRESA', max_length=20, verbose_name='Tipo de Cliente')),
                ('razon_social', models.CharField(blank=True, default='', help_text='Nombre legal de la empresa', max_length=200, null=True, verbose_name='Razón Social')),
                ('nombre_comercial', models.CharField(blank=True, default='', help_text='Nombre comercial o de fantasía', max_length=200, verbose_name='Nombre Comercial')),
                ('rut_empresa', models.CharField(blank=True, default='', help_text='Formato: XX.XXX.XXX-X', max_length=12, null=True, verbose_name='RUT Empresa')),
                ('giro', models.CharField(blank=True, default='', help_text='Actividad comercial principal', max_length=200, null=True, verbose_name='Giro Comercial')),
                ('nombre_contacto', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Nombre Contacto')),
                ('apellidos_contacto', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Apellidos Contacto')),
                ('cargo_contacto', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Cargo del Contacto')),
                ('tipo_documento', models.CharField(blank=True, choices=[('RUT', 'RUT'), ('PASAPORTE', 'Pasaporte'), ('DNI', 'DNI'), ('OTRO', 'Otro')], default='RUT', max_length=20, null=True, verbose_name='Tipo de Documento')),
                ('numero_documento', models.CharField(blank=True, default='', max_length=20, null=True, verbose_name='Número de Documento')),
                ('telefono_empresa', models.CharField(blank=True, default='+56', max_length=15, null=True, validators=[django.core.validators.RegexValidator(message="El número debe estar en formato: '+56999999999'", regex='^\\+?56?\\d{9}$')], verbose_name='Teléfono Empresa')),
                ('telefono_contacto', models.CharField(blank=True, default='+56', max_length=15, null=True, validators=[django.core.validators.RegexValidator(message="El número debe estar en formato: '+56999999999'", regex='^\\+?56?\\d{9}$')], verbose_name='Teléfono Contacto')),
                ('email_empresa', models.EmailField(blank=True, default='', max_length=254, null=True, verbose_name='Email Empresa')),
                ('email_contacto', models.EmailField(blank=True, default='', max_length=254, null=True, verbose_name='Email Contacto')),
                ('direccion', models.CharField(blank=True, default='', max_length=255, verbose_name='Dirección')),
                ('comuna', models.CharField(blank=True, default='', max_length=100, verbose_name='Comuna')),
                ('ciudad', models.CharField(blank=True, default='', max_length=100, verbose_name='Ciudad')),
                ('region', models.CharField(blank=True, default='', max_length=100, verbose_name='Región')),
                ('codigo_postal', models.CharField(blank=True, default='', max_length=7, verbose_name='Código Postal')),
                ('sitio_web', models.URLField(blank=True, default='', verbose_name='Sitio Web')),
                ('observaciones', models.TextField(blank=True, default='', verbose_name='Observaciones')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Registro')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Última Actualización')),
                ('activo', models.BooleanField(default=True, verbose_name='Cliente Activo')),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
                'ordering': ['-fecha_registro'],
                'unique_together': {('tipo_cliente', 'rut_empresa')},
            },
        ),
        migrations.CreateModel(
            name='Factura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_documento', models.CharField(choices=[('33', 'Factura Electrónica'), ('34', 'Factura Exenta Electrónica'), ('39', 'Boleta Electrónica'), ('41', 'Boleta Exenta Electrónica')], default='33', max_length=4)),
                ('numero_factura', models.CharField(max_length=20, unique=True)),
                ('fecha_emision', models.DateTimeField(default=django.utils.timezone.now)),
                ('fecha_vencimiento', models.DateField()),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=12)),
                ('iva', models.DecimalField(decimal_places=2, max_digits=12)),
                ('total', models.DecimalField(decimal_places=2, max_digits=12)),
                ('estado', models.CharField(choices=[('EMITIDA', 'Emitida'), ('PAGADA', 'Pagada'), ('ANULADA', 'Anulada')], default='EMITIDA', max_length=10)),
                ('sii_track_id', models.CharField(blank=True, help_text='ID de seguimiento SII (si aplica)', max_length=40, null=True)),
                ('sii_xml', models.TextField(blank=True, help_text='XML enviado/recibido del SII (opcional)', null=True)),
                ('rut_emisor', models.CharField(help_text='RUT empresa que emite', max_length=12)),
                ('rut_receptor', models.CharField(help_text='RUT cliente', max_length=12)),
                ('razon_social_receptor', models.CharField(max_length=100)),
                ('giro_receptor', models.CharField(max_length=100)),
                ('direccion_receptor', models.CharField(max_length=150)),
                ('contrato', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='facturas', to='alquiler.contrato')),
            ],
            options={
                'ordering': ['-fecha_emision'],
            },
        ),
        migrations.CreateModel(
            name='Nota',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('CREDITO', 'Nota de Crédito'), ('DEBITO', 'Nota de Débito')], max_length=10)),
                ('fecha_emision', models.DateTimeField(default=django.utils.timezone.now)),
                ('monto', models.DecimalField(decimal_places=2, max_digits=12)),
                ('motivo', models.TextField(blank=True)),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('numero', models.CharField(help_text='Número interno o folio SII si ya integrado', max_length=30, unique=True)),
                ('sii_track_id', models.CharField(blank=True, help_text='ID de seguimiento SII (si aplica)', max_length=40, null=True)),
                ('sii_xml', models.TextField(blank=True, help_text='XML enviado/recibido del SII (opcional)', null=True)),
                ('factura', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notas', to='alquiler.factura')),
            ],
            options={
                'verbose_name': 'Nota de Crédito/Débito',
                'verbose_name_plural': 'Notas de Crédito/Débito',
                'ordering': ['-fecha_emision'],
            },
        ),
        migrations.CreateModel(
            name='Reserva',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_inicio', models.DateTimeField(verbose_name='Fecha de Inicio')),
                ('fecha_fin', models.DateTimeField(verbose_name='Fecha de Fin')),
                ('fecha_reserva', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Reserva')),
                ('estado', models.CharField(choices=[('PENDIENTE', 'Pendiente'), ('CONFIRMADA', 'Confirmada'), ('COMPLETADA', 'Completada'), ('CANCELADA', 'Cancelada')], default='PENDIENTE', max_length=20, verbose_name='Estado')),
                ('monto_total', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Monto Total')),
                ('observaciones', models.TextField(blank=True, verbose_name='Observaciones')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='reservas', to='alquiler.cliente', verbose_name='Cliente')),
            ],
            options={
                'verbose_name': 'Reserva',
                'verbose_name_plural': 'Reservas',
                'ordering': ['-fecha_reserva'],
            },
        ),
        migrations.AddField(
            model_name='contrato',
            name='reserva',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contrato', to='alquiler.reserva', verbose_name='Reserva'),
        ),
    ]
